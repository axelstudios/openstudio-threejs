<html>
  <head>
    <title>OpenStudio to three.js</title> 
    <style>canvas { width: 100%; height: 100% }</style> 
  </head> 
  <body> 
  
    <div id="container"></div>
    
    <script src="https://rawgithub.com/mrdoob/three.js/master/build/three.js"></script> 
		<script src="http://threejs.org/examples/js/controls/OrbitControls.js"></script>
		<script src="http://threejs.org/examples/js/Detector.js"></script>
    
    <script> 
    
			if ( ! Detector.webgl ) Detector.addGetWebGLMessage();

			var container;

			var camera, controls, scene, renderer;

      function init() {

        // camera
				camera = new THREE.PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 1000 );
        camera.position.x = <%= camera_x %>;
        camera.position.y = <%= camera_y %>;
				camera.position.z = <%= camera_z %>;
        camera.lookAt( new THREE.Vector3( <%= camera_look_x %>, <%= camera_look_y %>, <%= camera_look_z %> ) )

        // controls
				controls = new THREE.OrbitControls( camera );
				controls.addEventListener( 'change', render );

        // scene
				scene = new THREE.Scene();
				scene.fog = new THREE.FogExp2( 0xcccccc, 0.002 );
        
        var material =  new THREE.MeshLambertMaterial( { color: 0xffffff, shading: THREE.FlatShading, wireframe: false, side: THREE.DoubleSide, opacity: 1.0, transparent: false } );
        //var material =  new THREE.MeshFaceMaterial( { color: 0xffffff, shading: THREE.FlatShading } );
        //var material =  new THREE.MeshBasicMaterial( { color: 0x666666, shading: THREE.SmoothShading, wireframe: false, side: THREE.DoubleSide, opacity: 0.7, transparent: true } );
        
        // lights
				light = new THREE.DirectionalLight( 0xff0000 );
				light.position.set( 0, -1, 0 );
				scene.add( light );
        
        light = new THREE.DirectionalLight( 0x00ff00 );
				light.position.set( 0, 0, -1 );
				scene.add( light );

        light = new THREE.AmbientLight( 0x0000ff );
				scene.add( light );

        // geometry
        <%= sceneGeometry %>
        
        // renderer
				renderer = new THREE.WebGLRenderer( { antialias: false } );
				//renderer.setClearColor( scene.fog.color, 1 );
				renderer.setSize( window.innerWidth, window.innerHeight );
        
        container = document.getElementById( 'container' );
				container.appendChild( renderer.domElement );
        
        window.addEventListener( 'resize', onWindowResize, false );
      }
      
			function render() {
				renderer.render( scene, camera );
      }
        
			function onWindowResize() {
				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();
				renderer.setSize( window.innerWidth, window.innerHeight );
				render();
			}
      
			function animate() {
				requestAnimationFrame( animate );
				controls.update();
			}
      
			init();
			animate();
    
    </script> 
  </body> 
</html>